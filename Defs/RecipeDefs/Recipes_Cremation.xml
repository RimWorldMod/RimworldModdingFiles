<?xml version="1.0" encoding="utf-8" ?>
<RecipeDefs>

	<!-- A cremation recipe lacks any products, so it destroys the ingredients used -->
	
	<RecipeDef>
		<defName>desired defName</defName>
		<!-- Desired defName to reference and use the recipe -->
		<label>second-person verb</label>
		<!-- Name of the recipe bill. For example - "burn apparel", "cremate corpses" -->
		<description>Long-form description of the procedure.</description>
		<!-- Long-form description of the action. For example - "Burns clothing items to get rid of them." -->
		<jobString>Present-progressive verb.</jobString>
		<!-- What the pawn state will be defined as. For example - "Cremating." or "Burning Apparel." -->
		<workAmount>number</workAmount>
		<!-- The amount of work ticks to complete. -->
		<requiredGiverWorkType>WorkType name</requiredGiverWorkType>
		<!-- Optional. Sets a job type for the recipe so it can only be performed by colonists who have it enabled.
		The base game only uses Cooking or Hauling in this context. -->
		<effectWorking>effect name</effectWorking>
		<!-- The working effect for the recipe. Available vanilla values:
		BurnDrug
		ButcherFlesh
		ButcherMechanoid
		Cook
		Cremate
		CutStone
		Repair
		Sculpt
		Smelt
		Smith
		Surgery
		Tailor -->
		<soundWorking>sound reference</soundWorking>
		<!-- Relevant sound to be used with the recipe -->
		<ingredients>
		<!-- These are the actual things the recipe uses. You can set an item or a category by filter. You can use multiple filters to include multiple ingredients. -->
			<li>
				<filter>
					<categories>
					<!-- If you set a category filter, every item in that category is fair to use unless specified elsewhere (see below) -->
						<li>category</li>
						<!-- Vanilla categories:
						AnimalProductRaw
						Apparel
						Corpses
						CorpsesAnimal
						CorpsesHumanlike
						CorpsesMechanoid
						Drugs
						Fabric
						FoodRaw
						Foods
						MeatRaw
						Medicine
						Metallic
						PlantFoodRaw
						Root
						StoneChunks
						Stony
						Weapons
						Woody -->
					</categories>
				</filter>
				<count>number</count>
				<!-- Defines the amount taken in this specific ingredient, is defined for every ingredient -->
			</li>
			<li>
				<filter>
					<thingDefs>
					<!-- If you set a thingDefs filter, this specific thingDef will be used -->
						<li>defName</li>
					</thingDefs>
				</filter>
				<count>number</count>
			</li>
		</ingredients>
		<fixedIngredientFilter>
		<!-- Required and is used to include or exclude products in the bill. It can be identical to your <ingredients> list or more specific.
		If you set a category filter in your ingredient list, you can omit it from this list and set specific thingDefs instead; only they will be used out of that category. -->
			<categories>
				<li>category</li>
			</categories>
			<thingDefs>
				<li>defName</li>
			</thingDefs>
			<exceptedCategories>
			<!-- Optional. Excludes entire categories of items from the recipe, they will not be used -->
				<li>category</li>
			</exceptedCategories>
			<specialFiltersToDisallow>
			<!-- Optional. Tells the game to add a special filter in the recipe bill so it can be allowed ot disallowed.
			Best not to mess with this if you don't need it or use an existing recipe's special filter if you know it fits. -->
				<li>special filter</li>
			</specialFiltersToDisallow>
		</fixedIngredientFilter>
		<defaultIngredientFilter>
		<!-- Optional. When spawning the ingredients for the recipe bill, these will be the ones enabled by default -->
			<categories>
				<li>category</li>
			</categories>
			<thingDefs>
				<li>defName</li>
			</thingDefs>
			<specialFiltersToAllow>
			<!-- Optional. Tells the game to add a special filter in the recipe bill so it can be allowed ot disallowed.
			Best not to mess with this if you don't need it or use an existing recipe's special filter if you know it fits. -->
				<li>special filter</li>
			</specialFiltersToAllow>
		</defaultIngredientFilter>
	</RecipeDef>
	
	<!-- Basic cremation recipe template -->
	
	<RecipeDef>
		<defName></defName>
		<label></label>
		<description></description>
		<jobString></jobString>
		<workAmount></workAmount>
		<effectWorking></effectWorking>
		<soundWorking></soundWorking>
		<ingredients>
			<li>
				<filter>
					<categories>
						<li></li>
					</categories>
				</filter>
				<count></count>
			</li>
		</ingredients>
		<fixedIngredientFilter>
			<categories>
				<li></li>
			</categories>
		</fixedIngredientFilter>
	</RecipeDef>
	
	<!-- Advanced cremation recipe template -->
	
	<RecipeDef>
		<defName></defName>
		<label></label>
		<description></description>
		<jobString></jobString>
		<workAmount></workAmount>
		<requiredGiverWorkType></requiredGiverWorkType>
		<effectWorking></effectWorking>
		<soundWorking></soundWorking>
		<ingredients>
			<li>
				<filter>
					<categories>
						<li></li>
					</categories>
				</filter>
				<count></count>
			</li>
			<li>
				<filter>
					<thingDefs>
						<li></li>
					</thingDefs>
				</filter>
				<count></count>
			</li>
		</ingredients>
		<fixedIngredientFilter>
			<categories>
				<li></li>
			</categories>
			<thingDefs>
				<li></li>
			</thingDefs>
			<exceptedCategories>
				<li></li>
			</exceptedCategories>
			<specialFiltersToDisallow>
				<li></li>
			</specialFiltersToDisallow>
		</fixedIngredientFilter>
		<defaultIngredientFilter>
			<categories>
				<li></li>
			</categories>
			<thingDefs>
				<li></li>
			</thingDefs>
			<specialFiltersToAllow>
				<li></li>
			</specialFiltersToAllow>
		</defaultIngredientFilter>
	</RecipeDef>

</RecipeDefs>